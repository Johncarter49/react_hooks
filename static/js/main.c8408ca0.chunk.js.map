{"version":3,"sources":["ClassComponent.js","FunctionalComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ClassComponent","state","counter","increase","setState","decrease","console","log","className","this","onClick","React","Component","FunctionalComponent","useState","setCounter","useEffect","App","isVisible","setisVisible","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA0CeA,E,4MAhCXC,MAAQ,CACJC,QAAS,G,EAabC,SAAW,WACP,EAAKC,SAAS,CAAEF,QAAS,EAAKD,MAAMC,QAAU,K,EAElDG,SAAW,WACP,EAAKD,SAAS,CAAEF,QAAS,EAAKD,MAAMC,QAAU,K,uDAflD,WACII,QAAQC,IAAI,uB,gCAEhB,WACID,QAAQC,IAAI,wB,gCAGhB,WACID,QAAQC,IAAI,0B,oBAShB,WAAU,IAAD,OACL,OACI,sBAAKC,UAAU,QAAf,UACI,iDACA,0CAAaC,KAAKR,MAAMC,WACxB,wBAAQQ,QAAS,kBAAM,EAAKP,YAA5B,sBACA,wBAAQO,QAAS,kBAAM,EAAKL,YAA5B,6B,GAlCaM,IAAMC,WC2BpBC,EA3Ba,WAExB,MAA8BC,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBa,EAAhB,KAEAC,qBAAU,WAEN,OADAV,QAAQC,IAAI,aACN,WAAKD,QAAQC,IAAI,0BACzB,CAACL,IAUH,OACI,sBAAKM,UAAU,WAAf,UACI,sDACA,0CAAaN,KACb,wBAAQQ,QAAS,WAXrBK,EAAWb,EAAU,IAWjB,sBACA,wBAAQQ,QAAS,WARrBK,EAAWb,EAAU,IAQjB,0B,MCFGe,MAjBf,WACE,MAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKX,UAAU,MAAf,UACE,wBAAQE,QAAS,kBAAIS,GAAcD,IAAnC,oBACEA,GAAY,cAAC,EAAD,IACbA,EAAY,cAAC,EAAD,IAAyB,SCA7BE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8408ca0.chunk.js","sourcesContent":["import React from 'react';\n\nclass ClassComponent extends React.Component {\n    //    constructor() {\n    //        super();\n    //        this.state = {\n    //            counter: 0\n    //        }\n    //        this.increase=this.increase.bind(this);\n    //   }\n    state = {\n        counter: 0\n    }\n    componentDidMount(){\n        console.log(\"ComponentDidMount\");\n    }\n    componentDidUpdate(){\n        console.log(\"componentDidUpdate\");\n    }\n\n    componentWillMount(){\n        console.log(\"componentWillUnmount\");\n    }\n\n    increase = () => {\n        this.setState({ counter: this.state.counter + 1 });\n    }\n    decrease = () => {\n        this.setState({ counter: this.state.counter - 1 });\n    }\n    render() {\n        return (\n            <div className=\"class\">\n                <h2>Class Component</h2>\n                <p>Counter: {this.state.counter}</p>\n                <button onClick={() => this.increase()}>Increase</button>\n                <button onClick={() => this.decrease()}>Decrease</button>\n            </div>\n        )\n    }\n}\n\nexport default ClassComponent;","import React, { useState, useEffect } from 'react'\n\nconst FunctionalComponent = () => {\n    \n    const [counter, setCounter] = useState(0);\n\n    useEffect(()=>{\n        console.log(\"useEffect\");\n        return()=>{console.log(\"funcCompWillUnmount\")}\n    },[counter])\n    \n    const increase = ()=>{\n        setCounter(counter + 1);\n    }\n\n    const decrease = () => {\n        setCounter(counter - 1);\n    } \n\n    return (\n        <div className=\"function\">\n            <h2>Functional Component</h2>\n            <p>Counter: {counter}</p>\n            <button onClick={()=> increase()}>Increase</button>\n            <button onClick={()=> decrease()}>Decrease</button>\n        </div>\n    )\n}\n\nexport default FunctionalComponent;\n","import { useState } from 'react';\nimport ClassComponent from './ClassComponent';\nimport FunctionalComponent from './FunctionalComponent';\nimport './App.css';\n\nfunction App() {\n  const [isVisible, setisVisible] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <button onClick={()=>setisVisible(!isVisible)}>Toggle</button>\n      { isVisible &&<ClassComponent />}\n      {isVisible ? <FunctionalComponent />: null}\n\n\n      {/*<FunctionalComponent />*/}\n      \n      {/*<ClassComponent />*/}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}